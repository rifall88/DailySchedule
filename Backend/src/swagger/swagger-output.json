{
  "openapi": "3.0.0",
  "info": {
    "title": "Daily Schedule API",
    "version": "1.0.0",
    "description": "Dokumentasi API untuk sistem manajemen jadwal harian."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development Server"
    }
  ],
  "tags": [
    {
      "name": "User Authentication",
      "description": "Operasi terkait pendaftaran dan login pengguna."
    },
    {
      "name": "Schedules",
      "description": "Operasi CRUD untuk jadwal harian."
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Masukkan token JWT yang Anda dapatkan dari login (misal: 'Bearer YOUR_TOKEN')"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32", "example": 1 },
          "name": { "type": "string", "example": "John Doe" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-06T10:00:00Z"
          }
        },
        "xml": { "name": "User" }
      },
      "RegisterRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": { "type": "string", "example": "John Doe" },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "example": "strongpass123"
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "boolean", "example": true },
          "message": { "type": "string", "example": "Register Success" },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 1 },
              "name": { "type": "string", "example": "John Doe" },
              "email": { "type": "string", "example": "john.doe@example.com" }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "minLength": 8,
            "example": "strongpass123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "status": { "type": "boolean", "example": true },
          "message": { "type": "string", "example": "Login Success" },
          "data": {
            "type": "object",
            "properties": {
              "id": { "type": "integer", "example": 1 },
              "name": { "type": "string", "example": "John Doe" },
              "email": { "type": "string", "example": "john.doe@example.com" },
              "access_token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "id": { "type": "integer", "format": "int32", "example": 1 },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "title": { "type": "string", "example": "Meeting with Client" },
          "description": {
            "type": "string",
            "nullable": true,
            "example": "Discuss Q3 strategy"
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-06-25"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "nullable": true,
            "example": "10:30"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-06T10:00:00Z"
          },
          "User": { "$ref": "#/components/schemas/User" }
        },
        "xml": { "name": "Schedule" }
      },
      "ScheduleCreateRequest": {
        "type": "object",
        "required": ["title", "description", "date", "time"],
        "properties": {
          "title": { "type": "string", "example": "Project Deadline" },
          "description": {
            "type": "string",
            "example": "Submit final report",
            "minLength": 5,
            "maxLength": 1000
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-07-01"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "example": "17:00"
          }
        }
      },
      "ScheduleUpdateRequest": {
        "type": "object",
        "required": ["title", "description", "date", "time"],
        "properties": {
          "title": { "type": "string", "example": "Updated Meeting Title" },
          "description": {
            "type": "string",
            "example": "Revised discussion points",
            "minLength": 5,
            "maxLength": 1000
          },
          "date": {
            "type": "string",
            "format": "date",
            "example": "2025-06-26"
          },
          "time": {
            "type": "string",
            "pattern": "^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$",
            "example": "11:00"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "example": "Operasi berhasil." }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Terjadi kesalahan server."
          }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": { "type": "string" },
            "example": [
              "Nama pengguna wajib diisi.",
              "Format email tidak valid."
            ]
          }
        }
      }
    },
    "responses": {
      "InternalServerError": {
        "description": "Kesalahan server internal",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "UnauthorizedError": {
        "description": "Akses tidak sah (token tidak valid atau tidak ada)",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "NotFound": {
        "description": "Sumber daya tidak ditemukan",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ErrorResponse" }
          }
        }
      },
      "BadRequestError": {
        "description": "Permintaan buruk (input tidak valid)",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ValidationErrorResponse" }
          }
        }
      }
    }
  },
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["User Authentication"],
        "summary": "Mendaftarkan pengguna baru",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Pengguna berhasil didaftarkan",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/RegisterResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User Authentication"],
        "summary": "Login pengguna dan dapatkan token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login berhasil, mengembalikan token JWT",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/LoginResponse" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": {
            "description": "Kredensial tidak valid",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/schedules": {
      "post": {
        "tags": ["Schedules"],
        "summary": "Membuat jadwal baru",
        "security": [{ "BearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleCreateRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Jadwal berhasil dibuat",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Jadwal berhasil dibuat"
                    },
                    "Jadwal": { "$ref": "#/components/schemas/Schedule" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "get": {
        "tags": ["Schedules"],
        "summary": "Mendapatkan semua jadwal milik pengguna yang terautentikasi",
        "description": "Mengembalikan daftar jadwal yang dibuat oleh pengguna yang sedang login.",
        "security": [{ "BearerAuth": [] }],
        "responses": {
          "200": {
            "description": "Daftar jadwal milik pengguna yang terautentikasi",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Schedule"
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    },
    "/schedules/{id}": {
      "get": {
        "tags": ["Schedules"],
        "summary": "Mendapatkan jadwal berdasarkan ID (milik pengguna yang terautentikasi)",
        "description": "Mengembalikan detail jadwal tertentu jika ID jadwal cocok dengan jadwal milik pengguna yang sedang login.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID Jadwal",
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Jadwal ditemukan",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Schedule" }
              }
            }
          },
          "404": {
            "description": "Jadwal tidak ditemukan atau bukan milik pengguna",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "put": {
        "tags": ["Schedules"],
        "summary": "Memperbarui jadwal berdasarkan ID (milik pengguna yang terautentikasi)",
        "description": "Memperbarui detail jadwal tertentu jika ID jadwal cocok dengan jadwal milik pengguna yang sedang login.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID Jadwal",
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ScheduleUpdateRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Jadwal berhasil diperbarui",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Jadwal berhasil diperbarui"
                    },
                    "schedule": { "$ref": "#/components/schemas/Schedule" }
                  }
                }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequestError" },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      },
      "delete": {
        "tags": ["Schedules"],
        "summary": "Menghapus jadwal berdasarkan ID (milik pengguna yang terautentikasi)",
        "description": "Menghapus jadwal tertentu jika ID jadwal cocok dengan jadwal milik pengguna yang sedang login.",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID Jadwal",
            "schema": { "type": "integer", "format": "int32" }
          }
        ],
        "responses": {
          "200": {
            "description": "Jadwal berhasil dihapus",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MessageResponse" }
              }
            }
          },
          "401": { "$ref": "#/components/responses/UnauthorizedError" },
          "404": { "$ref": "#/components/responses/NotFound" },
          "500": { "$ref": "#/components/responses/InternalServerError" }
        }
      }
    }
  }
}
